{"version":3,"file":"component---src-pages-index-tsx-8b020ecc5904bef0e1c2.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/TopPost.tsx","webpack://gatsby-starter-blog/./src/components/PostListItem.tsx","webpack://gatsby-starter-blog/./src/components/LastPosts.tsx","webpack://gatsby-starter-blog/./src/pages/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { Box, Flex, Grid, Heading, Image, Link, Text } from \"@chakra-ui/react\";\nimport { Link as RouterLink } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport { PostInfo } from \"./PostInfo\";\n\ntype Props = {\n  post: Queries.Mdx;\n};\n\nexport function TopPost({ post }: Props) {\n  const imgFile =\n    post.frontmatter?.heroImageFile?.childImageSharp?.gatsbyImageData;\n  const imgLink = post.frontmatter?.heroImageLink;\n  const title = post.frontmatter?.title;\n  const description = post.frontmatter?.description;\n  const link = post.slug || \"\";\n\n  return (\n    <Grid templateColumns=\"1fr 1fr\" gap=\"8\" bg=\"\">\n      <Box>\n        <Link as={RouterLink} to={link}>\n          <Box rounded=\"xl\" overflow=\"hidden\">\n            {imgLink && (\n              <Image src={imgLink} alt={post.frontmatter?.heroImageAlt || \"\"} />\n            )}\n            {!imgLink && imgFile && (\n              <GatsbyImage\n                image={imgFile}\n                alt={post.frontmatter?.heroImageAlt || \"\"}\n              />\n            )}\n          </Box>\n        </Link>\n      </Box>\n      <Flex flexDir=\"column\" justifyContent=\"space-around\">\n        <Link as={RouterLink} to={link}>\n          <Heading as=\"h2\" size=\"4xl\" lineHeight=\"1.24\">\n            {title}\n          </Heading>\n        </Link>\n        {description && <Text fontSize=\"xl\">{description}</Text>}\n        <PostInfo post={post} />\n      </Flex>\n    </Grid>\n  );\n}\n","import { Box, Heading, Text, Link } from \"@chakra-ui/react\";\nimport { Link as RouterLink } from \"gatsby\";\nimport React from \"react\";\nimport { PostInfo } from \"./PostInfo\";\n\ntype Props = {\n  post: Queries.Mdx;\n};\n\nexport function PostListItem({ post }: Props) {\n  const title = post?.frontmatter?.title || post?.slug;\n  const description = post?.frontmatter?.description || post.excerpt;\n\n  return (\n    <li key={post?.slug}>\n      <Box as=\"article\" my=\"12\" itemScope itemType=\"http://schema.org/Article\">\n        {post?.slug && (\n          <Box as=\"header\" mb=\"2\">\n            <Heading as=\"h3\" size=\"xl\" mb=\"2\">\n              <Link as={RouterLink} to={post?.slug} itemProp=\"url\">\n                <span itemProp=\"headline\">{title}</span>\n              </Link>\n            </Heading>\n            <PostInfo post={post} />\n          </Box>\n        )}\n        <section>\n          <Text itemProp=\"description\">{description}</Text>\n        </section>\n      </Box>\n    </li>\n  );\n}\n","import { Box, Grid } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { LastPost } from \"./LastPost\";\n\ntype Props = {\n  posts: Queries.Mdx[];\n};\n\nexport function LastPosts({ posts }: Props) {\n  return (\n    <Grid templateColumns={`repeat(${posts.length}, 1fr)`} gap=\"8\">\n      {posts.map((post) => (\n        <LastPost post={post} key={post.id} />\n      ))}\n    </Grid>\n  );\n}\n","import * as React from \"react\";\nimport { graphql, PageProps } from \"gatsby\";\n\nimport Layout from \"../components/Layout\";\nimport Seo from \"../components/Seo\";\nimport { Box, Container } from \"@chakra-ui/react\";\nimport { TopPost } from \"../components/TopPost\";\nimport { PostListItem } from \"../components/PostListItem\";\nimport { LastPosts } from \"../components/LastPosts\";\n\nconst BlogIndex = ({ data, location }: PageProps<Queries.Query>) => {\n  const siteTitle = data.site?.siteMetadata?.title;\n  const allPosts = data.allMdx.nodes;\n  const posts: Queries.Mdx[] = [];\n  const lastThree: Queries.Mdx[] = [];\n  let favorite: Queries.Mdx | undefined;\n\n  allPosts.forEach((item) => {\n    if (item.frontmatter?.favorite) {\n      favorite = item;\n      return;\n    }\n\n    if (lastThree.length < 3) {\n      lastThree.push(item);\n    } else {\n      posts.push(item);\n    }\n  });\n\n  if (allPosts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"All posts\" />\n        <p>No blog posts found. Add markdown posts to \"content/blog\"</p>\n      </Layout>\n    );\n  }\n\n  return (\n    <>\n      <Seo title=\"All posts\" />\n      <Layout location={location} title={siteTitle}>\n        {favorite && <TopPost post={favorite} />}\n        <Box my=\"16\">\n          <LastPosts posts={lastThree} />\n        </Box>\n        <Container maxW=\"container.md\">\n          <ol style={{ listStyle: `none` }}>\n            {posts.map((post) => (\n              <PostListItem post={post} key={post.id} />\n            ))}\n          </ol>\n        </Container>\n      </Layout>\n    </>\n  );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { hidden: { ne: true } } }\n    ) {\n      nodes {\n        id\n        excerpt\n        slug\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          favorite\n          tag\n          heroImageFile {\n            childImageSharp {\n              gatsbyImageData\n            }\n          }\n          heroImageAlt\n          heroImageLink\n        }\n        timeToRead\n      }\n    }\n  }\n`;\n"],"names":["TopPost","post","imgFile","frontmatter","_post$frontmatter","heroImageFile","_post$frontmatter$her","childImageSharp","_post$frontmatter$her2","gatsbyImageData","imgLink","_post$frontmatter2","heroImageLink","title","_post$frontmatter3","description","_post$frontmatter4","link","slug","React","Grid","templateColumns","gap","bg","Box","Link","as","RouterLink","to","rounded","overflow","Image","src","alt","heroImageAlt","GatsbyImage","image","Flex","flexDir","justifyContent","Heading","size","lineHeight","Text","fontSize","PostInfo","PostListItem","excerpt","key","my","itemScope","itemType","mb","itemProp","LastPosts","posts","length","map","LastPost","id","favorite","data","location","siteTitle","site","_data$site","siteMetadata","_data$site$siteMetada","allPosts","allMdx","nodes","lastThree","forEach","item","_item$frontmatter","push","Layout","Seo","Container","maxW","style","listStyle"],"sourceRoot":""}